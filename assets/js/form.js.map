{"version":3,"sources":["form.js","ancient-browser-support.js","submit.js"],"names":["HTMLFormElement","prototype","reportValidity","jQuery","length","$form","this","hasClass","find","prefix","data","i18n","window","error","validationError","valid","remove","each","index","element","setCustomValidity","closest","val","before","scrollTop","$","document","ready","on","event","$submitButton","activeElement","attr","indexOf","checkValidity","preventDefault","setTimeout"],"mappings":"AAAA,YCAOA,iBAAgBC,UAAUC,gBAE3BC,OAAQ,qBAAsBC,OAAS,IAQ3CJ,gBAAgBC,UAAUC,eAAiB,WAE1C,GAAIG,EAIHA,GADIF,OAAQG,MAAOC,SAAU,oBACrBJ,OAAQG,MAGRH,OAAQG,MAAOE,KAAM,oBAG9B,IAAIC,GAASJ,EAAMK,KAAM,UACxBC,EAAOC,OAAQH,EAAS,iBACxBI,EAAQF,EAAKG,gBACbC,GAAQ,CAsBT,OAnBAZ,QAAQG,MAAOE,KAAM,qBAAsBQ,SAE3Cb,OAAQG,MAAOE,KAAM,aAAcS,KAAM,SAAUC,EAAOC,GAGzDA,EAAQC,kBAAmB,IAEpBjB,OAAQgB,GAAUE,QAAS,MAAOd,SAAU,WACpB,OAA5BJ,OAAQgB,GAAUG,OAA6C,IAA3BnB,OAAQgB,GAAUG,QAExDH,EAAQC,kBAAmBP,GAC3BV,OAAQgB,GAAUI,OAAQ,kCAAoCV,EAAQ,WAEtEE,GAAQ,KAMHA,EAOAA,GALNZ,OAAQG,MAAOe,QAAS,QAASG,UAAWrB,OAAQG,MAAOE,KAAM,oCAC1DO,KClDX,SAAYU,GAEXA,EAAGC,UAAWC,MAAO,WAEfF,EAAG,qBAAsBrB,QAAU,GAExCqB,EAAG,QAASG,GAAI,SAAU,SAAUC,GAEnC,GAAIC,GAAgBL,EAAGC,SAASK,cAIhC,IAAKD,EAAcE,KAAM,QAASC,QAAS,sBAA2B,CAErE,GAAI5B,GAAQoB,EAAGnB,KAGfmB,GAAGnB,MAAOE,KAAM,aAAcS,KAAM,SAAUC,EAAOC,GACpDM,EAAGN,GAAUa,KAAM,YAAY,KAGhC3B,EAAM,GAAGH,iBAEFG,EAAM,GAAG6B,kBAGfL,EAAMM,iBAKNC,WAAY,WAGX/B,EAAMG,KAAM,aAAcS,KAAM,SAAUC,EAAOC,GAChDM,EAAGN,GAAUa,KAAM,YAAY,MAG9B,YAUH7B","file":"form.js","sourcesContent":["'use strict';\n\nif (!HTMLFormElement.prototype.reportValidity) {\n\n\tif (jQuery('.rbp-support-form').length > 0) {\n\n\t\t/**\n   * Wait, people use IE and Safari outside of downloading Chrome?\n   * \n   * @since\t  {{VERSION}}\n   * @return\t  void\n   */\n\t\tHTMLFormElement.prototype.reportValidity = function () {\n\n\t\t\tvar $form;\n\n\t\t\t// This allows us to properly find our form whether it is in a <form> or a <div>\n\t\t\tif (jQuery(this).hasClass('rbp-support-form')) {\n\t\t\t\t$form = jQuery(this);\n\t\t\t} else {\n\t\t\t\t$form = jQuery(this).find('.rbp-support-form');\n\t\t\t}\n\n\t\t\tvar prefix = $form.data('prefix'),\n\t\t\t    i18n = window[prefix + '_support_form'],\n\t\t\t    error = i18n.validationError,\n\t\t\t    valid = true;\n\n\t\t\t// Remove all old Validation Errors\n\t\t\tjQuery(this).find('.validation-error').remove();\n\n\t\t\tjQuery(this).find('.required').each(function (index, element) {\n\n\t\t\t\t// Reset Custom Validity Message\n\t\t\t\telement.setCustomValidity('');\n\n\t\t\t\tif (!jQuery(element).closest('td').hasClass('hidden') && (jQuery(element).val() === null || jQuery(element).val() == '')) {\n\n\t\t\t\t\telement.setCustomValidity(error);\n\t\t\t\t\tjQuery(element).before('<span class=\"validation-error\">' + error + '</span>');\n\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!valid) {\n\n\t\t\t\tjQuery(this).closest('body').scrollTop(jQuery(this).find('.validation-error:first-of-type'));\n\t\t\t\treturn valid;\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t};\n\t}\n};\n'use strict';\n\n(function ($) {\n\n\t$(document).ready(function () {\n\n\t\tif ($('.rbp-support-form').length <= 0) return;\n\n\t\t$('form').on('submit', function (event) {\n\n\t\t\tvar $submitButton = $(document.activeElement);\n\n\t\t\t// Check to see if it is our Submit Button\n\t\t\t// A lot of our plugins tie into other systems (EDD, PSP, etc.) which often means we're creating something inside of another <form> with little options to place outside of it\n\t\t\tif ($submitButton.attr('name').indexOf('_support_submit') > -1) {\n\n\t\t\t\tvar $form = $(this);\n\n\t\t\t\t// Ensure any required fields have their required status\n\t\t\t\t$(this).find('.required').each(function (index, element) {\n\t\t\t\t\t$(element).attr('required', true);\n\t\t\t\t});\n\n\t\t\t\t$form[0].reportValidity(); // Report Validity via HTML5 stuff\n\n\t\t\t\tif (!$form[0].checkValidity()) {\n\n\t\t\t\t\t// Invalid, don't submit\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t// If our form is Invalid, remove the Required attributes after 2 seconds\n\t\t\t\t\t// The timeout is used because otherwise the little pop-up Chrome and many other browsers make goes away immediately\n\n\t\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\t\t// Reset after reporting validity so future submissions of other forms don't get hung up\n\t\t\t\t\t\t$form.find('.required').each(function (index, element) {\n\t\t\t\t\t\t\t$(element).attr('required', false);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 2000);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n})(jQuery);","if ( ! HTMLFormElement.prototype.reportValidity ) {\n\t\n\tif ( jQuery( '.rbp-support-form' ).length > 0 ) {\n\n\t\t/**\n\t\t * Wait, people use IE and Safari outside of downloading Chrome?\n\t\t * \n\t\t * @since\t  {{VERSION}}\n\t\t * @return\t  void\n\t\t */\n\t\tHTMLFormElement.prototype.reportValidity = function () {\n\t\t\t\n\t\t\tvar $form;\n\t\t\t\n\t\t\t// This allows us to properly find our form whether it is in a <form> or a <div>\n\t\t\tif ( jQuery( this ).hasClass( 'rbp-support-form' ) ) {\n\t\t\t\t$form = jQuery( this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$form = jQuery( this ).find( '.rbp-support-form' );\n\t\t\t}\n\n\t\t\tvar prefix = $form.data( 'prefix' ),\n\t\t\t\ti18n = window[ prefix + '_support_form' ],\n\t\t\t\terror = i18n.validationError,\n\t\t\t\tvalid = true;\n\n\t\t\t// Remove all old Validation Errors\n\t\t\tjQuery( this ).find( '.validation-error' ).remove();\n\n\t\t\tjQuery( this ).find( '.required' ).each( function( index, element ) {\n\n\t\t\t\t// Reset Custom Validity Message\n\t\t\t\telement.setCustomValidity( '' );\n\n\t\t\t\tif ( ! jQuery( element ).closest( 'td' ).hasClass( 'hidden') && \n\t\t\t\t\t( jQuery( element ).val() === null || jQuery( element ).val() == '' ) ) {\n\n\t\t\t\t\telement.setCustomValidity( error );\n\t\t\t\t\tjQuery( element ).before( '<span class=\"validation-error\">' + error + '</span>' );\n\n\t\t\t\t\tvalid = false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( ! valid ) {\n\n\t\t\t\tjQuery( this ).closest( 'body' ).scrollTop( jQuery( this ).find( '.validation-error:first-of-type' ) );\n\t\t\t\treturn valid;\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t};\n\t\t\n\t}\n\t\n};","( function( $ ) {\n\t\n\t$( document ).ready( function() {\n\t\t\n\t\tif ( $( '.rbp-support-form' ).length <= 0 ) return;\n\t\t\n\t\t$( 'form' ).on( 'submit', function( event ) {\n\t\t\t\n\t\t\tvar $submitButton = $( document.activeElement );\n\t\t\t\n\t\t\t// Check to see if it is our Submit Button\n\t\t\t// A lot of our plugins tie into other systems (EDD, PSP, etc.) which often means we're creating something inside of another <form> with little options to place outside of it\n\t\t\tif ( $submitButton.attr( 'name' ).indexOf( '_support_submit' ) > -1 ) {\n\t\t\t\t\n\t\t\t\tvar $form = $( this );\n\t\t\t\t\n\t\t\t\t// Ensure any required fields have their required status\n\t\t\t\t$( this ).find( '.required' ).each( function( index, element ) {\n\t\t\t\t\t$( element ).attr( 'required', true );\n\t\t\t\t} );\n\t\t\t\n\t\t\t\t$form[0].reportValidity(); // Report Validity via HTML5 stuff\n\t\t\t\t\n\t\t\t\tif ( ! $form[0].checkValidity() ) { \n\t\t\t\t\t\n\t\t\t\t\t// Invalid, don't submit\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\n\t\t\t\t\t// If our form is Invalid, remove the Required attributes after 2 seconds\n\t\t\t\t\t// The timeout is used because otherwise the little pop-up Chrome and many other browsers make goes away immediately\n\t\t\t\t\n\t\t\t\t\tsetTimeout( function() {\n\n\t\t\t\t\t\t// Reset after reporting validity so future submissions of other forms don't get hung up\n\t\t\t\t\t\t$form.find( '.required' ).each( function( index, element ) {\n\t\t\t\t\t\t\t$( element ).attr( 'required', false );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}, 2000 );\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t\n\t} );\n\t\n} )( jQuery );"]}